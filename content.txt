#include <iostream>
#include <vector>
#include <string>
#include <bitset>
#include <iomanip>

	for(size_t l=0;l<len;l++)
	{
		printf("%lx: %.2x\n",(unsigned long)&p[l],p[l]);

	}
	printf("\n");

	printf("%lx\n",(unsigned long)&xVal);
	showbytes((unsigned char *)&xVal, sizeof(long));
	showbytes((unsigned char *)&dVal, sizeof(double));
	//bitCount(0xFFFFFFFFFFFFFFFF);



	printf("5+2=%d\n", sum(5, 2));

		//singed int shify
		int x = -8;
		printf("X>>1=%d,%.4x\n", x >> 1,x>>1);
		x >>= 2;

		printf("X>>2=%d,%.4x\n", x, x);

//		int lval = 0xFEDCBA98 << 32;
		int lval = 0xFEDCBA98;
		
		lval <<= 32;

		printf("lval << 32:lval=%.8x, int bytes=%d\n", lval,sizeof(int));

		lval <<= 33;
		printf("lval<<33:lval=%.8x, int bytes=%d\n", lval, sizeof(int));


		printf("(lval<<32)=%.8x, int bytes=%d\n", lval << 32, sizeof(int));
		printf("(lval>>33)=%.8x, int bytes=%d\n", lval >>33, sizeof(int));

		//constant shift by compiler 
		lval = 0xFEDCBA98<<32;
		printf("lval=%.8x, int bytes=%d\n", lval, sizeof(int));


unsigned long bitCount4(unsigned long x)
{
    long val=0;
    for(int i=0;i<4;i++)
    {
        val +=x&0x1111111111111111L;
        x>>=1;
    }
    
    val +=(val>>4);
    val &=0x0F0F0F0F0F0F0F0F;
    val +=(val>>32);
    val +=(val>>16);
    val +=(val>>8);
    return val&0xFF;
}